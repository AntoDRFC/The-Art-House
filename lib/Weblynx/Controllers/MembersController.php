<?php/** * BlogAdmin Controller * * @author Anto Heley <anto@antodev.com> * @version */class MembersController extends Weblynx_Controllers_Base {        public function indexAction() {        $filter['filterChar'] = $this->req->getParam('filter-char');        $filter['name']       = $this->req->getParam('name');        $filter['artform']    = $this->req->getParam('artform');        $filter['activity']   = $this->req->getParam('activity');                $this->view->membersList = $this->dbMapper->getArtists($filter);        $this->view->showall = $filter['filterChar'] ? $filter['filterChar'] : false;                                      $this->view->css[]       = '/css/pagebuilder.css';        $this->view->contentView = '/members/index.phtml';                $this->renderView('admin.phtml');    }        public function deleteAction() {        $id = $this->req->getParam('id');                if($this->dbMapper->deleteRecord('artists', 'id', $id)) {            $redir = $_SERVER['HTTP_REFERER'];            $this->_redirect($redir);        } else {            throw new Exception('Failed to delete member, please go back and try again.');        }    }        public function memberinfoAction() {        $this->view->artistId = $this->req->getParam('id');        $this->view->artist  = $this->dbMapper->getArtist($this->view->artistId);                $this->view->contentView = '/members/home.phtml';        $this->renderView('admin.phtml');    }        public function updateAction() {        $id = $this->req->getParam('id');                $userData['id']           = $id;        $userData['first_name']   = htmlentities($this->req->getParam('first_name'));        $userData['surname']      = htmlentities($this->req->getParam('surname'));        $userData['telephone']    = htmlentities($this->req->getParam('telephone'));        $userData['mobile']       = htmlentities($this->req->getParam('mobile'));        $userData['email']        = htmlentities($this->req->getParam('email'));        $userData['website']      = htmlentities($this->req->getParam('website'));        $userData['organisation'] = htmlentities($this->req->getParam('organisation'));                $password = htmlentities($this->req->getParam('password'));        if($password) {            $userData['password'] = $password;        }                $addressId = $this->dbMapper->getArtist($userData['id']);                  // Address        $address['address_id'] = $addressId['address_id'];        $address['line_one']   = $this->req->getParam('line_one');        $address['line_two']   = $this->req->getParam('line_two');        $address['line_three'] = $this->req->getParam('line_three');        $address['city']       = $this->req->getParam('city');        $address['postcode']   = $this->req->getParam('postcode');        $address['county']     = $this->req->getParam('county');        $address['country']    = $this->req->getParam('country');                                              // get saved id and pass that into $userDataAddress        $this->dbMapper->saveRecord($address, 'addresses', 'address_id');                $this->dbMapper->saveRecord($userData, 'artists', 'id');                                        $this->_redirect('/members/');    }            public function approveAction() {        $id = $this->req->getParam('id');                $userData['id']     = $id;        $userData['status'] = 'approved';                $this->dbMapper->saveRecord($userData, 'artists', 'id');                                        $this->_redirect('/members');            }        public function rejectAction() {        $id = $this->req->getParam('id');                $userData['id']     = $id;        $userData['status'] = 'rejected';                $this->dbMapper->saveRecord($userData, 'artists', 'id');                                        $this->_redirect('/members');            }        public function contentapprovalAction() {             $this->view->news  = $this->dbMapper->getUnApprovedNews();                             $this->view->work  = $this->dbMapper->getUnApprovedWork();                                     $this->view->contentView = '/members/content.phtml';        $this->renderView('admin.phtml');    }        public function newsdecisionAction(){        $decision = $this->req->getParam('decision');        $id       = $this->req->getParam('id');                $userData['news_id']     = $id;        $userData['approved'] = $decision;                $this->dbMapper->saveRecord($userData, 'artists_news', 'news_id');          $this->_redirect('/members/contentapproval');    }        public function workdecisionAction(){        $decision = $this->req->getParam('decision');        $id       = $this->req->getParam('id');                        $userData['work_id']     = $id;        $userData['approved'] = $decision;                $this->dbMapper->saveRecord($userData, 'artists_work', 'work_id');          $this->_redirect('/members/contentapproval');    }    }